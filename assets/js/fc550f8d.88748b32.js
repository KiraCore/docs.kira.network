"use strict";(self.webpackChunkkira_documentation=self.webpackChunkkira_documentation||[]).push([[5694],{3876:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"backend---sekai/configuration","title":"Configuration","description":"SEKAI is a blockchain network that allows users to query its state via RPC (Remote Procedure Call) and GRPC (gRPC Remote Procedure Call) protocols, as well as propagate blocks through the P2P (Peer-to-Peer) protocol. It is also possible to monitor SEKAI through a dedicated Prometheus port.","source":"@site/tabs/docs/backend---sekai/configuration.mdx","sourceDirName":"backend---sekai","slug":"/backend---sekai/configuration","permalink":"/docs/backend---sekai/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/KiraCore/docs.kira.network/issues/new?assignees=&labels=documentation,issue&projects=&template=report_an_issue.yaml&title=%5BISSUE+REPORT%5D&page-github=/docs/backend---sekai/configuration&page-local=backend---sekai/configuration.mdx","tags":[],"version":"current","lastUpdatedAt":1739294998000,"sidebarPosition":3,"frontMatter":{"title":"Configuration","sidebar_position":3,"slug":"configuration"},"sidebar":"defaultSidebar","previous":{"title":"Installation","permalink":"/docs/backend---sekai/installation"},"next":{"title":"CLI Guide","permalink":"/docs/backend---sekai/cli-guide"}}');var o=t(4848),i=t(8453);t(5537),t(9329);const r={title:"Configuration",sidebar_position:3,slug:"configuration"},s=void 0,l={},c=[{value:"Repository",id:"fbd1c90fa73e4371a1acd39772b84100",level:3},{value:"Default Ports",id:"0418932ac4a142c684e702ced8579f8d",level:3},{value:"Node Configuration Files and Directory",id:"87c245337c464ea183434303aebfe46b",level:3},{value:"Client Configuration",id:"3d228313019c4d5e86a4d08816eeaeca",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"SEKAI is a blockchain network that allows users to query its state via RPC (Remote Procedure Call) and GRPC (gRPC Remote Procedure Call) protocols, as well as propagate blocks through the P2P (Peer-to-Peer) protocol. It is also possible to monitor SEKAI through a dedicated Prometheus port."}),"\n",(0,o.jsx)(n.h3,{id:"fbd1c90fa73e4371a1acd39772b84100",children:"Repository"}),"\n",(0,o.jsxs)(n.p,{children:["The Github repository for SEKAI can be found ",(0,o.jsx)(n.a,{href:"https://github.com/kiracore/sekai",children:(0,o.jsx)(n.strong,{children:"here"})}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"0418932ac4a142c684e702ced8579f8d",children:"Default Ports"}),"\n",(0,o.jsx)(n.p,{children:"SEKAI exposes a metadata endpoint to help communicate with the blockchain application via RPC. This endpoint provides information on the types of transactions that can be sent on-chain."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Transaction types metadata RPC endpoint:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"<IP>:26657/metadata"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Tendermint RPC native endpoints:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.tendermint.com/v0.34/rpc/",children:(0,o.jsx)(n.strong,{children:"Documentation Reference"})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In addition to the RPC and P2P ports, SEKAI also has a dedicated Prometheus port for monitoring purposes.\nThe specific port number for this port is not provided in the given information."}),"\n",(0,o.jsx)(n.h3,{id:"87c245337c464ea183434303aebfe46b",children:"Node Configuration Files and Directory"}),"\n",(0,o.jsxs)(n.p,{children:["By default, config and data files are stored in the folder located at the\xa0",(0,o.jsx)(n.code,{children:"~/.sekaid"}),"\xa0directory which can be changed by using the\xa0",(0,o.jsx)(n.code,{children:"--home"}),"\xa0flag. It is possible to have multiple home directories that each represent a different blockchain."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-text",children:".# ~/.sekaid\n  \u251c\u2500\u2500 data/# Contains the databases used by the node.\n  \u2514\u2500\u2500 config/\n      \u251c\u2500\u2500 app.toml# Application-related configuration file.\n      \u251c\u2500\u2500 config.toml# Tendermint-related configuration file.\n\t    \u251c\u2500\u2500 client.toml# Client-related configuration file.\n      \u251c\u2500\u2500 genesis.json# The genesis file.\n      \u251c\u2500\u2500 node_key.json# Private key to use for node authentication in the p2p protocol.\n      \u2514\u2500\u2500 priv_validator_key.json# Private key to use as a validator in the consensus protocol.\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The Cosmos SDK automatically generates two configuration files inside\xa0",(0,o.jsx)(n.code,{children:"~/.sekaid/config"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"config.toml"}),": This file contains the configuration for the Tendermint consensus engine, including the node's validator address, the minimum gas prices, and the node's peers. In addition, the config.toml file also specifies the location of the data and log directories, as well as the p2p and rpc listen addresses. It may also contain configuration options for the Tendermint WebSocket (WS) server and the ABCI application."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"app.toml"}),": This file contains the configuration for the SEKAI blockchain application such as state pruning strategies, telemetry, gRPC and REST servers configuration, state sync..."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"3d228313019c4d5e86a4d08816eeaeca",children:"Client Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["We can view the default client config setting by using the ",(0,o.jsx)(n.code,{children:"sekaid config"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'sekaid config\n{\n\t"chain-id": "",\n\t"keyring-backend": "os",\n\t"output": "text",\n\t"node": "tcp://localhost:26657",\n\t"broadcast-mode": "sync"\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Changes to the default settings can be made according to users preferences. For example, the chain identifier can be changed from a blank name by using:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'sekaid config "chain-id" sekai_1\nsekaid config\n{\n\t"chain-id": "sekai_1",\n\t"keyring-backend": "os",\n\t"output": "text",\n\t"node": "tcp://localhost:26657",\n\t"broadcast-mode": "sync"\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Other values can be changed in the same manner. Alternatively, modification can be made directly in the ",(0,o.jsx)(n.code,{children:"client.toml"})," file."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},5537:(e,n,t)=>{t.d(n,{A:()=>y});var a=t(6540),o=t(8215),i=t(5627),r=t(6347),s=t(372),l=t(604),c=t(1861),d=t(8749);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:o}}=e;return{value:n,label:t,attributes:a,default:o}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const o=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace({...o.location,search:n.toString()})}),[i,o])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,i=h(e),[r,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[c,u]=f({queryString:t,groupId:o}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,i]=(0,d.Dv)(t);return[o,(0,a.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:o}),g=(()=>{const e=c??m;return p({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var b=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(4848);function k(e){let{className:n,block:t,selectedValue:a,selectValue:r,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),o=s[t].value;o!==a&&(c(n),r(o))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>{l.push(e)},onKeyDown:u,onClick:d,...i,className:(0,o.A)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function j(e){const n=m(e);return(0,v.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,v.jsx)(k,{...n,...e}),(0,v.jsx)(x,{...n,...e})]})}function y(e){const n=(0,b.A)();return(0,v.jsx)(j,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(6540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var a=t(8215);const o={tabItem:"tabItem_Ymn6"};var i=t(4848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,r),hidden:t,children:n})}}}]);