"use strict";(self.webpackChunkkira_documentation=self.webpackChunkkira_documentation||[]).push([[8886],{3592:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"backend---sekai/modules/ethereum/index","title":"Ethereum","description":"Overview","source":"@site/tabs/docs/backend---sekai/modules/ethereum/index.mdx","sourceDirName":"backend---sekai/modules/ethereum","slug":"/backend---sekai/modules/ethereum/ethereum","permalink":"/docs/backend---sekai/modules/ethereum/ethereum","draft":false,"unlisted":false,"editUrl":"https://github.com/KiraCore/docs.kira.network/issues/new?assignees=&labels=documentation,issue&projects=&template=report_an_issue.yaml&title=%5BISSUE+REPORT%5D&page-github=/docs/backend---sekai/modules/ethereum/ethereum&page-local=backend---sekai/modules/ethereum/index.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Ethereum","sidebar_position":3,"slug":"ethereum"},"sidebar":"defaultSidebar","previous":{"title":"Consensus Nodes Ranking & Status Management","permalink":"/docs/backend---sekai/modules/slashing/consensus-nodes-ranking--status-management"},"next":{"title":"ETH RPC Abstraction","permalink":"/docs/backend---sekai/modules/ethereum/eth-rpc-abstraction"}}');var r=a(4848),s=a(8453);a(5537),a(9329);const o={title:"Ethereum",sidebar_position:3,slug:"ethereum"},i=void 0,u={},l=[{value:"Overview",id:"17f467da57b780f8a5e6f459bc1f3708",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"17f467da57b780f8a5e6f459bc1f3708",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"Ethereum wallets, such as Metamask, rely on JSON-RPC to interact with blockchains, making them incompatible with Cosmos-based networks like KIRA, which use distinct transaction formats and APIs. To address this, KIRA\u2019s decentralized API, INTERX, translates Ethereum JSON-RPC queries into Cosmos-compatible formats, enabling Metamask to interact seamlessly with KIRA."}),"\n",(0,r.jsx)(t.p,{children:'While INTERX supports reading blockchain data, handling Ethereum-signed transactions is more complex. These transactions require a mechanism to be "wrapped" in a Cosmos-compatible format. By encoding Ethereum transactions using protocol buffers (protobuf), they can be relayed and executed on the Cosmos chain without losing their original integrity or purpose.'}),"\n",(0,r.jsxs)(t.p,{children:["The command ",(0,r.jsx)(t.code,{children:"sekaid tx ethereum relay"})," creates a transaction on SEKAI (Cosmos-sdk based chain) that wraps an Ethereum transaction into a Cosmos-sdk compatible format for processing by SEKAI blockchain application."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9329:(e,t,a)=>{a.d(t,{A:()=>o});a(6540);var n=a(8215);const r={tabItem:"tabItem_Ymn6"};var s=a(4848);function o(e){let{children:t,hidden:a,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,o),hidden:a,children:t})}},5537:(e,t,a)=>{a.d(t,{A:()=>y});var n=a(6540),r=a(8215),s=a(5627),o=a(6347),i=a(372),u=a(604),l=a(1861),c=a(8749);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,u.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,s=m(e),[o,u]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[l,d]=b({queryString:a,groupId:r}),[p,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:r}),v=(()=>{const e=l??p;return h({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{v&&u(v)}),[v]);return{selectedValue:o,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);u(e),d(e),f(e)}),[d,f,s]),tabValues:s}}var f=a(9136);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=a(4848);function k(e){let{className:t,block:a,selectedValue:n,selectValue:o,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),c=e=>{const t=e.currentTarget,a=u.indexOf(t),r=i[a].value;r!==n&&(l(t),o(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},t),children:i.map((e=>{let{value:t,label:a,attributes:s}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>{u.push(e)},onKeyDown:d,onClick:c,...s,className:(0,r.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function w(e){let{lazy:t,children:a,selectedValue:s}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function x(e){const t=p(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(k,{...t,...e}),(0,g.jsx)(w,{...t,...e})]})}function y(e){const t=(0,f.A)();return(0,g.jsx)(x,{...e,children:d(e.children)},String(t))}},8453:(e,t,a)=>{a.d(t,{R:()=>o,x:()=>i});var n=a(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);