name: Push Notion to IPFS

on:
  push:
    branches: [ master, dev ]

jobs:
 build:
    name: Repo Build
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write
      pull-requests: write
    container: 
      image: ghcr.io/kiracore/docker/base-image:v0.11.2
    steps:
      - name: Init
        run: |
          mkdir -p /github/home/.cache/pip
          git config --global --add safe.directory /github/home/.cache/pip
          git config --global --add safe.directory $PWD
          echo "NOTION_PAGE_ID=d8a73a70ab7544e29eb8638603ad9442" >> $GITHUB_ENV
          echo "SOURCE_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
          echo "DISTRO=${GITHUB_WORKSPACE}/loconotion/dist/notion" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0
      - name: Checkout loconotion
        uses: actions/checkout@v3
        with:
          repository: leoncvlt/loconotion
          ref: 759697ade3e29d97d5de477f8d39404e2c53789f
          path: loconotion
      - name: Download current version of the site
        uses: actions/checkout@v3
        with:
          repository: 'KiraCore/docs.kira.network'
          ref: ${{ env.SOURCE_BRANCH }}
          path: _site
      - name: Install Loconotion & Build
        run: |
          ls -a1 ./
          cd ./loconotion
          pip install -r ./requirements.txt
          rm -rfv ./dist "${{ env.DISTRO }}"
          mkdir -p ./dist "${{ env.DISTRO }}"
          cp -fv ../_site/config.toml ./site.toml
          python loconotion "./site.toml" --chromedriver /usr/bin/chromedriver
          echo "${{env.SOURCE_BRANCH}}" > "${{ env.DISTRO }}/source.txt"
          ls -a1 ../_site
          cp -fv ../_site/LICENSE.md "${{ env.DISTRO }}/LICENSE.md"
          cp -fv ../_site/embed.html "${{ env.DISTRO }}/embed.html"
          cp -fv ../_site/redirect.html "${{ env.DISTRO }}/redirect.html"
          ls -a1 "${{ env.DISTRO }}"
      - name: Publish HTML to IPFS
        run: |
          set -x
          IPFS_UPLOAD_NAME="www-docs-kira-network-${{env.SOURCE_BRANCH}}"
          set -e
          ipfs-api delete $IPFS_UPLOAD_NAME --key=${{secrets.PINATA_API_JWT}} --verbose=true || echo "WARNING: Failed to delete file with name '$IPFS_UPLOAD_NAME' request failed or it might not exist"
          set +e
          ipfs-api pin "${{ env.DISTRO }}" $IPFS_UPLOAD_NAME --key=${{secrets.PINATA_API_JWT}} --verbose=true | tee -a ./ipfs-pin.log || echo "ERROR: Failed to pin web app"
          IPFS_HASH=$(cat ./ipfs-pin.log | tail -n 1 | bash-utils jsonParse ".hash" || echo "")
          [ -z "$IPFS_HASH" ] && echo "ERROR: IPFS Upload Failed" && exit 1
          echo "$IPFS_HASH" > "${{ env.DISTRO }}/ipfs-cid.txt"
          echo "IPFS_HASH=$IPFS_HASH" >> $GITHUB_ENV
          TARGET_VAR="IPFS_CID"
          REPLACE_VAR="https://ipfs.kira.network/ipfs/$IPFS_HASH"
          ESCAPED_VAR=$(echo "$REPLACE_VAR" | sed 's/\//\\\//g; s/&/\\&/g; s/\?/\\?/g')
          sed -i "s/$TARGET_VAR/$ESCAPED_VAR/g" "${{ env.DISTRO }}/embed.html"
          sed -i "s/$TARGET_VAR/$ESCAPED_VAR/g" "${{ env.DISTRO }}/redirect.html"
          TARGET_VAR="GITHUB_REPO"
          REPLACE_VAR="https://github.com/KiraCore/docs.kira.network/tree/${{env.SOURCE_BRANCH}}-release"
          ESCAPED_VAR=$(echo "$REPLACE_VAR" | sed 's/\//\\\//g; s/&/\\&/g; s/\?/\\?/g')
          sed -i "s/$TARGET_VAR/$ESCAPED_VAR/g" "${{ env.DISTRO }}/redirect.html"
      - name: Release
        uses: s0/git-publish-subdir-action@develop
        env:
            REPO: self
            BRANCH: "${{ env.SOURCE_BRANCH }}-release"
            FOLDER: "${{ env.DISTRO }}"
            GITHUB_TOKEN: ${{ secrets.REPO_ACCESS }}
      - name: Create PR from dev to master branch
        uses: cea2aj/pull-request@84eb0c3478f13651e5649367941b867ca02d7926
        if: env.SOURCE_BRANCH == 'dev'
        with:
          github_token: ${{ secrets.REPO_ACCESS }}
          source_branch: ${{ env.SOURCE_BRANCH }}
          destination_branch: master
          pr_title: "${{ env.SOURCE_BRANCH }} -> master" 
          pr_label: "kira-automation"
          pr_allow_empty: true
#          pr_body: |
#             Web app was deployed to IPFS: ```${{env.IPFS_HASH}}```
#             * Private Gateway: [ipfs.kira.network/ipfs/${{env.IPFS_HASH}}](https://ipfs.kira.network/ipfs/${{env.IPFS_HASH}}/index.html)
#             * Public Gateway: [ipfs.io/ipfs/${{env.IPFS_HASH}}](https://ipfs.io/ipfs/${{env.IPFS_HASH}}/index.html)