name: Convert public notion page to HTML

on:
  push:
    branches: [ master, dev ]

jobs:
 build:
    name: Repo Build
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
      id-token: write
      pull-requests: write
    container: 
      image: ghcr.io/kiracore/docker/base-image:v0.11.2
    steps:
      - name: Init
        run: |
          mkdir -p /github/home/.cache/pip
          git config --global --add safe.directory /github/home/.cache/pip
          git config --global --add safe.directory $PWD
          echo "NOTION_PAGE_ID=d8a73a70ab7544e29eb8638603ad9442" >> $GITHUB_ENV
          REPOSITORY_NAME="${{ github.event.repository.name }}" && echo "REPOSITORY_NAME=$REPOSITORY_NAME" >> $GITHUB_ENV
          echo "MASTER_REF=$(git ls-remote https://github.com/kiracore/$REPOSITORY_NAME | head -1 | sed 's/HEAD//')" >> $GITHUB_ENV
          git show-branch "remotes/origin/dev" && echo "DEV_BRANCH_EXISTS=true" >> $GITHUB_ENV || echo "DEV_BRANCH_EXISTS=false" >> $GITHUB_ENV
      - name: Extract branch name on push
        if: github.event_name == 'push'
        shell: bash
        run: |
          echo "SOURCE_BRANCH=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      - name: Extract branch name on pull request
        if: github.event_name == 'pull_request'
        env:
          REF_BRANCH: ${{ github.event.pull_request.head.ref }}
          BASE_REF_BRANCH: ${{ github.base_ref }}
        shell: bash
        run: |
          echo "SOURCE_BRANCH=$(echo ${{ env.REF_BRANCH }})" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.0
      - name: Checkout loconotion
        uses: actions/checkout@v3
        with:
          repository: leoncvlt/loconotion
          ref: 759697ade3e29d97d5de477f8d39404e2c53789f
          path: loconotion
      - name: Download current version of the site
        uses: actions/checkout@v3
        with:
          repository: 'KiraCore/docs.kira.network'
          ref: master
          path: _site
      - name: Install Loconotion & Build
        run: |
          ls -a1 ./
          cd ./loconotion
          pip install -r ./requirements.txt
          rm -rfv ./dist ../_site/src
          mkdir -p ./dist ../src
          cp -fv ../_site/config.toml ./site.toml
          python loconotion "./site.toml" --chromedriver /usr/bin/chromedriver
          cd ..
          cp -av ./_site/. ./
          cp -av "${GITHUB_WORKSPACE}/loconotion/dist/Demo Docs/." ./src
          rm -rf ./_site ./loconotion
          ls -a1 ./src
          echo "${{env.SOURCE_BRANCH}}" > ./src/source.txt
      - name: Publish HTML to IPFS
        run: |
          set -x
          IPFS_UPLOAD_NAME="www-docs-kira-network-${{env.SOURCE_BRANCH}}"
          set -e
          ipfs-api delete $IPFS_UPLOAD_NAME --key=${{secrets.PINATA_API_JWT}} --verbose=true || echo "WARNING: Failed to delete file with name '$IPFS_UPLOAD_NAME' request failed or it might not exist"
          set +e
          ipfs-api pin ./src $IPFS_UPLOAD_NAME --key=${{secrets.PINATA_API_JWT}} --verbose=true | tee -a ./ipfs-pin.log || echo "ERROR: Failed to pin web app"
          IPFS_HASH=$(cat ./ipfs-pin.log | tail -n 1 | bash-utils jsonParse ".hash" || echo "")
          [ -z "$IPFS_HASH" ] && echo "ERROR: IPFS Upload Failed" && exit 1
          rm -fv ./ipfs-pin.log
          echo "$IPFS_HASH" > ./ipfs-cid.txt
          echo "IPFS_HASH=$IPFS_HASH" >> $GITHUB_ENV
          echo "IPFS_HASH_SHORT=$IPFS_HASH_SHORT" >> $GITHUB_ENV
      - name: Release
        uses: s0/git-publish-subdir-action@develop
        env:
            REPO: self
            BRANCH: "${{ env.SOURCE_BRANCH }}-release"
            FOLDER: src
            GITHUB_TOKEN: ${{ secrets.REPO_ACCESS }}
  #          SSH_PRIVATE_KEY: ${{ secrets.KIRA_GITHUB_SSH }}
  #          KNOWN_HOSTS_FILE: resources/known_hosts

    #  - name: Commit files
    #    run: |
    #      git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
    #      git config --local user.name "github-actions[bot]"
    #      git add -A
    #      git commit -m "Deployed to IPFS: ${{env.IPFS_HASH}}"
     # - name: Push changes
     #   uses: ad-m/github-push-action@master
     #   with:
     #     github_token: ${{ secrets.KIRA_GITHUB_SSH }}
     #     branch: ${{ github.ref }}
     #     ssh: true
      - name: Create PR from dev to master branch
        # ref. repo-sync/pull-request is broken, using cea2aj/pull-request instead
        uses: cea2aj/pull-request@84eb0c3478f13651e5649367941b867ca02d7926
        if: env.SOURCE_BRANCH == 'dev'
        with:
          github_token: ${{ secrets.REPO_ACCESS }}
          source_branch: ${{ env.SOURCE_BRANCH }}
          destination_branch: master
          pr_title: "${{ env.SOURCE_BRANCH }} -> master" 
          pr_label: "kira-automation"
          pr_allow_empty: true


#      - name: Publish HTML to IPFS
#        uses: peterjgrainger/action-create-branch@v2.2.0
#        env:
#            GITHUB_TOKEN: ${{ secrets.REPO_ACCESS }}
#        with:
#            branch: 'release'
#      - name: Commit files
#        run: |
#          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#          git config --local user.name "github-actions[bot]"
#          git add --all
#          git commit -a -m "Deployed to IPFS: ${{env.IPFS_HASH}}" -b release
#      - name: Push changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.REPO_ACCESS }}
#          branch: release
#          force: true
    # - name: Deploy to Pages
    #    uses: JamesIves/github-pages-deploy-action@3.7.1
    #    with:
    #      GITHUB_TOKEN: ${{ secrets.REPO_ACCESS }}
    #      BRANCH: master
    #      FOLDER: ./
    #      COMMIT_MESSAGE: "Deployed to IPFS: ${{env.IPFS_HASH}}"

#    