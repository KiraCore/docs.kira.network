---
name: Ecosystem PR Workflow

on:
  pull_request:
    branches:
      - ecosystem

env:
  FILE: details.json
  SUBMISSIONS_PATH: ./ecosystem/submissions
  SUBMISSIONS_BRANCH: submissions

jobs:
  PR_check:
    name: Checks PR, upload project config
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.extract-project-name.outputs.project_name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            ${{ env.FILE }}
      - name: Extract project name from ${{ env.FILE }}
        id: extract-project-name
        run: |
          project_name=$(jq -r '.name' ${{ env.FILE }} | tr '[:upper:]' '[:lower:]' | tr ' ' '_')
          echo $project_name
          echo "project_name=${project_name}" >> "$GITHUB_OUTPUT"
      - name: DEBUG Info
        run: |
          pwd
          ls -lah
      - name: Upload artifact ${{ env.FILE }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILE }}
          path: ${{ env.FILE }}
          compression-level: 0
          if-no-files-found: error

  PR_create:
    needs: PR_check
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: ${{ needs.PR_check.outputs.project_name }}
    steps:

      - name: Check the project name
        run: |
          echo "$PROJECT_NAME"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Create and checkout a new branch
        run: |
          git checkout -b ${{ env.SUBMISSIONS_BRANCH }}/${{ env.PROJECT_NAME }}

      - name: Create folder and move ${{ env.FILE }}
        run: |
          mkdir -p ${{ env.SUBMISSIONS_PATH }}/${{ env.PROJECT_NAME }}

      - name: Download archived file
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.SUBMISSIONS_PATH }}/${{ env.PROJECT_NAME }}
          name: ${{ env.FILE }}

      - name: Configure git user, commit changes, push
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Create a folder" -m "* Project '$PROJECT_NAME'"
          git push origin ${{ env.SUBMISSIONS_BRANCH }}/${{ env.PROJECT_NAME }}

      - name: Create pull request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create --base master --title "Add new submission for $PROJECT_NAME" --body "Description"

      - name: Close initial PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr close ${{ github.event.number }}

      - name: Delete inital branch
        run: git push origin --delete ${{ github.event.pull_request.head.ref }}
